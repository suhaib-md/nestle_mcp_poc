AWSTemplateFormatVersion: '2010-09-09'
Description: Amazon EKS Auto Mode Cluster with dedicated VPC - Private and Public
  subnets
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: EKS Cluster Configuration
      Parameters:
      - ClusterName
      - KubernetesVersion
    - Label:
        default: Worker Network Configuration
      Parameters:
      - VpcBlock
      - PublicSubnet01Block
      - PublicSubnet02Block
      - PrivateSubnet01Block
      - PrivateSubnet02Block
Outputs:
  ClusterArn:
    Description: The ARN of the EKS cluster
    Value:
      Fn::GetAtt: EksCluster.Arn
  ClusterEndpoint:
    Description: The endpoint for the EKS cluster
    Value:
      Fn::GetAtt: EksCluster.Endpoint
  ClusterName:
    Description: The name of the EKS cluster
    Value:
      Ref: EksCluster
  ClusterSecurityGroupId:
    Description: Security group for the cluster control plane communication with worker
      nodes
    Value:
      Fn::GetAtt: EksCluster.ClusterSecurityGroupId
  NodeInstanceRoleArn:
    Description: The node instance role ARN
    Value:
      Fn::GetAtt: NodeInstanceRole.Arn
  SecurityGroups:
    Description: Security group for the cluster control plane communication with worker
      nodes
    Value:
      Fn::Join:
      - ','
      - - Ref: ControlPlaneSecurityGroup
  SubnetIds:
    Description: Subnets IDs in the VPC
    Value:
      Fn::Join:
      - ','
      - - Ref: PublicSubnet01
        - Ref: PublicSubnet02
        - Ref: PrivateSubnet01
        - Ref: PrivateSubnet02
  VpcId:
    Description: The VPC Id
    Value:
      Ref: VPC
Parameters:
  ClusterName:
    Default: multi-region-eks-east
    Description: Name of the EKS cluster
    Type: String
  KubernetesVersion:
    AllowedValues:
    - 1.28
    - 1.29
    - 1.3
    - 1.31
    - 1.32
    - 1.33
    Default: 1.33
    Description: Kubernetes version to use for the EKS cluster
    Type: String
  PrivateSubnet01Block:
    Default: 10.0.128.0/18
    Description: CidrBlock for private subnet 01 within the VPC
    Type: String
  PrivateSubnet02Block:
    Default: 10.0.192.0/18
    Description: CidrBlock for private subnet 02 within the VPC
    Type: String
  PublicSubnet01Block:
    Default: 10.0.0.0/18
    Description: CidrBlock for public subnet 01 within the VPC
    Type: String
  PublicSubnet02Block:
    Default: 10.0.64.0/18
    Description: CidrBlock for public subnet 02 within the VPC
    Type: String
  VpcBlock:
    Default: 10.0.0.0/16
    Description: The CIDR range for the VPC. This should be a valid private (RFC 1918)
      CIDR range.
    Type: String
Resources:
  ControlPlaneSecurityGroup:
    Properties:
      GroupDescription: Cluster communication with worker nodes
      VpcId:
        Ref: VPC
    Type: AWS::EC2::SecurityGroup
  EksCluster:
    DependsOn:
    - EksClusterRole
    - NodeInstanceRole
    - PublicSubnet01
    - PublicSubnet02
    - PrivateSubnet01
    - PrivateSubnet02
    Properties:
      AccessConfig:
        AuthenticationMode: API
      ComputeConfig:
        Enabled: true
        NodePools:
        - general-purpose
        - system
        NodeRoleArn:
          Fn::GetAtt: NodeInstanceRole.Arn
      KubernetesNetworkConfig:
        ElasticLoadBalancing:
          Enabled: true
      Name:
        Ref: ClusterName
      ResourcesVpcConfig:
        EndpointPrivateAccess: true
        EndpointPublicAccess: true
        SecurityGroupIds:
        - Ref: ControlPlaneSecurityGroup
        SubnetIds:
        - Ref: PublicSubnet01
        - Ref: PublicSubnet02
        - Ref: PrivateSubnet01
        - Ref: PrivateSubnet02
      RoleArn:
        Fn::GetAtt: EksClusterRole.Arn
      StorageConfig:
        BlockStorage:
          Enabled: true
      Version:
        Ref: KubernetesVersion
    Type: AWS::EKS::Cluster
  EksClusterRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          - sts:TagSession
          Effect: Allow
          Principal:
            Service:
            - eks.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
      - arn:aws:iam::aws:policy/AmazonEKSComputePolicy
      - arn:aws:iam::aws:policy/AmazonEKSBlockStoragePolicy
      - arn:aws:iam::aws:policy/AmazonEKSLoadBalancingPolicy
      - arn:aws:iam::aws:policy/AmazonEKSNetworkingPolicy
    Type: AWS::IAM::Role
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  NatGateway01:
    DependsOn:
    - NatGatewayEIP1
    - PublicSubnet01
    - VPCGatewayAttachment
    Properties:
      AllocationId:
        Fn::GetAtt: NatGatewayEIP1.AllocationId
      SubnetId:
        Ref: PublicSubnet01
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${AWS::StackName}-NatGatewayAZ1
    Type: AWS::EC2::NatGateway
  NatGateway02:
    DependsOn:
    - NatGatewayEIP2
    - PublicSubnet02
    - VPCGatewayAttachment
    Properties:
      AllocationId:
        Fn::GetAtt: NatGatewayEIP2.AllocationId
      SubnetId:
        Ref: PublicSubnet02
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${AWS::StackName}-NatGatewayAZ2
    Type: AWS::EC2::NatGateway
  NatGatewayEIP1:
    DependsOn:
    - VPCGatewayAttachment
    Properties:
      Domain: vpc
    Type: AWS::EC2::EIP
  NatGatewayEIP2:
    DependsOn:
    - VPCGatewayAttachment
    Properties:
      Domain: vpc
    Type: AWS::EC2::EIP
  NodeInstanceRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonEKSWorkerNodeMinimalPolicy
      - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPullOnly
      Path: /
    Type: AWS::IAM::Role
  PrivateRoute01:
    DependsOn:
    - VPCGatewayAttachment
    - NatGateway01
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway01
      RouteTableId:
        Ref: PrivateRouteTable01
    Type: AWS::EC2::Route
  PrivateRoute02:
    DependsOn:
    - VPCGatewayAttachment
    - NatGateway02
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NatGateway02
      RouteTableId:
        Ref: PrivateRouteTable02
    Type: AWS::EC2::Route
  PrivateRouteTable01:
    Properties:
      Tags:
      - Key: Name
        Value: Private Subnet AZ1
      - Key: Network
        Value: Private01
      VpcId:
        Ref: VPC
    Type: AWS::EC2::RouteTable
  PrivateRouteTable02:
    Properties:
      Tags:
      - Key: Name
        Value: Private Subnet AZ2
      - Key: Network
        Value: Private02
      VpcId:
        Ref: VPC
    Type: AWS::EC2::RouteTable
  PrivateSubnet01:
    Metadata:
      Comment: Subnet 03
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: PrivateSubnet01Block
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${AWS::StackName}-PrivateSubnet01
      - Key: kubernetes.io/role/internal-elb
        Value: 1
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  PrivateSubnet01RouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable01
      SubnetId:
        Ref: PrivateSubnet01
    Type: AWS::EC2::SubnetRouteTableAssociation
  PrivateSubnet02:
    Metadata:
      Comment: Private Subnet 02
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '1'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: PrivateSubnet02Block
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${AWS::StackName}-PrivateSubnet02
      - Key: kubernetes.io/role/internal-elb
        Value: 1
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  PrivateSubnet02RouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable02
      SubnetId:
        Ref: PrivateSubnet02
    Type: AWS::EC2::SubnetRouteTableAssociation
  PublicRoute:
    DependsOn: VPCGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: PublicRouteTable
    Type: AWS::EC2::Route
  PublicRouteTable:
    Properties:
      Tags:
      - Key: Name
        Value: Public Subnets
      - Key: Network
        Value: Public
      VpcId:
        Ref: VPC
    Type: AWS::EC2::RouteTable
  PublicSubnet01:
    Metadata:
      Comment: Subnet 01
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: PublicSubnet01Block
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${AWS::StackName}-PublicSubnet01
      - Key: kubernetes.io/role/elb
        Value: 1
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  PublicSubnet01RouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet01
    Type: AWS::EC2::SubnetRouteTableAssociation
  PublicSubnet02:
    Metadata:
      Comment: Subnet 02
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '1'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Ref: PublicSubnet02Block
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${AWS::StackName}-PublicSubnet02
      - Key: kubernetes.io/role/elb
        Value: 1
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  PublicSubnet02RouteTableAssociation:
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet02
    Type: AWS::EC2::SubnetRouteTableAssociation
  VPC:
    Properties:
      CidrBlock:
        Ref: VpcBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ${AWS::StackName}-VPC
    Type: AWS::EC2::VPC
  VPCGatewayAttachment:
    Properties:
      InternetGatewayId:
        Ref: InternetGateway
      VpcId:
        Ref: VPC
    Type: AWS::EC2::VPCGatewayAttachment
